CREATE TABLE CUSTOMER(
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(20) NOT NULL,
	PURCHASE_ID INT NOT NULL,
	ADDRESS JSONB NOT NULL
);

CREATE TABLE PURCHASE(
	ID SERIAL PRIMARY KEY,
	DATE_OF_PURCHASE DATE NOT NULL DEFAULT NOW(),
	ITEM INT NOT NULL,
	RETURNED BOOLEAN NOT NULL
);

CREATE TABLE ITEM(
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(20) NOT NULL,
	SUPPLIER_ID INT NOT NULL,
	STOCK INT NOT NULL,
	PRICE NUMERIC(7,2) NOT NULL
);

CREATE TABLE SUPPLIER(
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(20) NOT NULL,
	ADDRESS JSONB NOT NULL
);
-- --------------------------------------------------------------------------------------
-- JOINS
ALTER TABLE CUSTOMER 
	ADD CONSTRAINT FK 
	FOREIGN KEY(PURCHASE_ID) REFERENCES PURCHASE(ID) 
	ON DELETE SET NULL 
	ON UPDATE CASCADE;
	
ALTER TABLE PURCHASE
	ADD CONSTRAINT FK 
	FOREIGN KEY(ITEM) REFERENCES ITEM(ID) 
	ON DELETE SET NULL 
	ON UPDATE CASCADE;
	
ALTER TABLE ITEM
	ADD CONSTRAINT FK 
	FOREIGN KEY(SUPPLIER_ID) REFERENCES SUPPLIER(ID) 
	ON DELETE SET NULL 
	ON UPDATE CASCADE;

-- --------------------------------------------------------------------------------------
-- INSERT DATA
INSERT INTO SUPPLIER (NAME,ADDRESS) VALUES('ONEPLUS','{"CITY":"SHENZAN","COUNTRY":"CHINA"}'),('APPLE','{"CITY":"SILICON VALLY","COUNTRY":"USA"}'),
('VIVO','{"CITY":"Dongguan","COUNTRY":"CHINA"}');

INSERT INTO ITEM(NAME, SUPPLIER_ID, STOCK, PRICE) VALUES('9RT',1,4,45000),('13 MINI',2,7,65000),('13 PRO MAX',2,21,95000),('X60',3,45,75000);

INSERT INTO PURCHASE(ITEM,RETURNED) VALUES (6,false),(7,false),(8,false),(6,false),(6,false),(7,false);

INSERT INTO CUSTOMER(NAME,EMAIL,PURCHASE_ID,ADDRESS) VALUES ('ERIC','eric@gmail.com',7,'{"CITY":"CHENNAI","COUNTRY":"INDIA"}'),
('MARY','mary@gmail.com',8,'{"CITY":"MUMBAI","COUNTRY":"INDIA"}'),
('REX','rex@gmail.com',9,'{"CITY":"CALIFONIA","COUNTRY":"USA"}');

-- --------------------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION UPDATE_STOCK() RETURNS TRIGGER AS
$BODY$
BEGIN
			IF NEW.RETURN <> false
				UPDATE ITEM SET STOCK=OLD.STOCK+1
			END IF
           RETURN new;
END;
$BODY$
language plpgsql;
